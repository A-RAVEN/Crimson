#version 460
#pragma multicompile vert frag


#if VERTEX_SHADER
#include "camera.gh"
layout(set = 0, binding = 0) uniform MATRIX
{
	Camera cam;
};

layout(push_constant) uniform PUSH_CONSTANTS
{
	mat4 transform_matrix;
};

layout(location = 0) in vec3 positioin;
layout(location = 1) in vec2 texcoord;
layout(location = 2) in vec4 normal_data;
layout(location = 3) in vec4 tangent_data;

void main()
{
	gl_Position = cam.proj * cam.view * transform_matrix * vec4(positioin, 1.0);
}
#endif

#if FRAGMENT_SHADER
layout(location = 0) out vec4 color;

void main()
{
    color = vec4(1.0, 0.0, 0.0, 1.0);
}
#endif