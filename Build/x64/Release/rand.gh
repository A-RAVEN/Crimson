#ifndef RAND_H
#define RAND_H

uint wang_hash(uint seed)
{
    seed = (seed ^ 61) ^ (seed >> 16);
    seed *= 9;
    seed = seed ^ (seed >> 4);
    seed *= 0x27d4eb2d;
    seed = seed ^ (seed >> 15);
    return seed;
}

float rand_zero_one(uint seed)
{
    return float(wang_hash(seed)) * (1.0 / 4294967296.0);
}

float rand_range(uint seed, in vec2 _range)
{
    return _range.x + rand_zero_one(seed) * (_range.y - _range.x);
}
#endif